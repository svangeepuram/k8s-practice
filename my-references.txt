
Hardening:
https://www.cyberciti.biz/tips/linux-security.html

install tools:

firewalld:
apt-get install firewalld

apt install ufw

ssh server:
apt-get install openssh-server
apt install openssh-client

netstat :
apt install net-tools 
ping:
apt install iputils-ping
dig/nslookup:
apt install bind-utils

curl:
apt install curl

lsof:
apt install lsof

strace:
apt install strace


wget:
apt install wget
ip:
apt install iproute2

jq:
apt install jq

ss:
pt-get install -y ss-dev

ps:
apt-get install -y procps

tcpdump:
apt-get install tcpdump


wireshark:
sudo apt-get install software-properties-common

sudo add-apt-repository ppa:wireshark-dev/stable
sudo apt-get update

===
https://unix.stackexchange.com/questions/200239/how-can-i-keep-my-ssh-sessions-from-freezing
client:
/etc/ssh/ssh_config

Host *
ServerAliveInterval 100
===
/etc/ssh/sshd_config

ClientAliveInterval 60
TCPKeepAlive yes
ClientAliveCountMax 10000


=====
https://rsmitty.github.io/Manually-Checking-Out-KubeDNS/

kubectl exec -ti --namespace=kube-system kube-dns-v11-xxxxx -c etcd -- /bin/sh

Once inside the container, let’s list all of the services in the default namespace (I’ve only got one):

# etcdctl ls skydns/local/cluster/svc/default

/skydns/local/cluster/svc/default/kubernetes
Now, find the key for that service by calling ls again:
# etcdctl ls skydns/local/cluster/svc/default/kubernetes

/skydns/local/cluster/svc/default/kubernetes/8618524b
Finally, we can return the data associated with that key by using the get command!
# etcdctl get skydns/local/cluster/svc/default/kubernetes/8618524b

{"host":"10.55.240.1","priority":10,"weight":10,"ttl":30,"targetstrip":0}

.:53 {
    etcd {
        path /skydns
        endpoint <etcd_endpoint>
        upstream /etc/resolv.conf
    }
    ...
}
