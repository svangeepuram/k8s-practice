
command line completion :

http://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#Commands-For-Completion

Hardening:
https://www.cyberciti.biz/tips/linux-security.html

https://www.opensourceforu.com/2018/03/top-10-open-source-tools-linux-systems-administrators/
https://www.cyberciti.biz/tips/top-linux-monitoring-tools.html


install tools:

install gpg:
apt-get install gnupg -y

firewalld:
apt-get install firewalld -y

apt install ufw -y

ssh server:
apt-get install openssh-server -y
apt install openssh-client -y

netstat :
apt install net-tools 
ping:
apt install iputils-ping -y
dig/nslookup:
apt install bind9-utils -y 

curl:
apt install curl -y

lsof:
apt install lsof

strace:
apt install strace -y

kubeadm preflight prereqs:
[Error] if conntrack, ip, iptables, mount, nsenter commands are not present in the command path
[warning] if ebtables, ethtool, socat, tc, touch, crictl commands are not present in the command path

apt install conntrack  iptables mount y

install nsenter:
https://gist.github.com/mbn18/0d6ff5cb217c36419661

nsenter
apt-get install git build-essential libncurses5-dev libslang2-dev gettext zlib1g-dev libselinux1-dev debhelper lsb-release pkg-config po-debconf autoconf automake autopoint libtool bison -y
git clone git://git.kernel.org/pub/scm/utils/util-linux/util-linux.git util-linux
cd util-linux/

./autogen.sh
./configure --without-python --disable-all-programs --enable-nsenter
make
chmod +x nsenter 
mv nsenter /usr/local/bin/
bash-completion/nsenter /etc/bash_completion.d/nsenter

==





wget:
apt install wget
ip:
apt install iproute2 -y

jq:
apt install jq -y

ss:
apt-get install -y ss-dev

ss -t
ss state all sport = :ssh
ss state connected sport = :ssh
ss state all dst 74.125.0.0/16

ps:
apt-get install -y procps

tcpdump:
apt-get install tcpdump -y



wireshark:
sudo apt install software-properties-common -y

sudo add-apt-repository ppa:wireshark-dev/stable
sudo apt-get update

apt install wireshark
nmap:
sudo apt-get install nmap -y

sar:
apt-get install sysstat -y

-u CPU Usage of ALL CPUs
-q Reports run queue and load average
-r Memory Free and Used
-S Swap Space Used
-b Overall I/O Activities
-d Individual Block Device I/O Activities
-n Report network statistics
sudo vi /etc/default/sysstat
ENABLED="true"

==
sudo vi /etc/cron.d/sysstat
# Activity reports every 10 minutes everyday 
* * * * * root command -v debian-sa1 > /dev/null && debian-sa1 1 1


===
https://unix.stackexchange.com/questions/200239/how-can-i-keep-my-ssh-sessions-from-freezing
client:
/etc/ssh/ssh_config

Host *
ServerAliveInterval 100
===
/etc/ssh/sshd_config

ClientAliveInterval 60
TCPKeepAlive yes
ClientAliveCountMax 10000

ecdsa keys:
ssh-keygen -t ecdsa -b 521 -C "user@gmail.com"


ssh-keygen -t ed25519 -b 521 -C "user@gmail.com"

~/.ssh/config:
Host macbook
     HostName 192.168.0.100
     User johndoe
     IdentityFile ~/.ssh/id_ed25519
     ServerAliveInterval 60
     ServerAliveCountMax 30

### default for all ##
Host *
     ForwardAgent no
     ForwardX11 no
     ForwardX11Trusted yes
     Port 22
     Protocol 2
     ServerAliveInterval 60

ipvs:

 
=====
resolvectl query www.google.com
resolvectl query 216.58.194.196
resolvectl -t MX query google.com
resolvectl --legend=no  -t MX query google.com
resolvectl service _xmpp-server._tcp gmail.com
resolvectl --legend=no  service _xmpp-server._tcp gmail.com
resolvectl openpgp zbyszek@fedoraproject.org
resolvectl tlsa tcp fedoraproject.org:443

=====
root@worker2:/lib/systemd# grep -ir "OnCalendar" .
./system/motd-news.timer:OnCalendar=00,12:00:00
./system/apt-daily.timer:OnCalendar=*-*-* 6,18:00
./system/mdcheck_continue.timer:OnCalendar=daily
./system/xfs_scrub_all.timer:OnCalendar=Sun *-*-* 03:10:00
./system/man-db.timer:OnCalendar=daily
./system/mdmonitor-oneshot.timer:OnCalendar=daily
./system/mdcheck_start.timer:OnCalendar=Sun *-*-1..7 1:00:00
./system/apt-daily-upgrade.timer:OnCalendar=*-*-* 6:00
./system/fstrim.timer:OnCalendar=weekly
./system/fwupd-refresh.timer:OnCalendar=*-*-* 6,18:00
./system/e2scrub_all.timer:OnCalendar=Sun *-*-* 03:10:00
./system/logrotate.timer:OnCalendar=daily
./system/snapd.snap-repair.timer:OnCalendar=*-*-* 5,11,17,23:00
=====

https://rsmitty.github.io/Manually-Checking-Out-KubeDNS/

kubectl exec -ti --namespace=kube-system kube-dns-v11-xxxxx -c etcd -- /bin/sh

Once inside the container, let’s list all of the services in the default namespace (I’ve only got one):

# etcdctl ls skydns/local/cluster/svc/default

/skydns/local/cluster/svc/default/kubernetes
Now, find the key for that service by calling ls again:
# etcdctl ls skydns/local/cluster/svc/default/kubernetes

/skydns/local/cluster/svc/default/kubernetes/8618524b
Finally, we can return the data associated with that key by using the get command!
# etcdctl get skydns/local/cluster/svc/default/kubernetes/8618524b

{"host":"10.55.240.1","priority":10,"weight":10,"ttl":30,"targetstrip":0}

.:53 {
    etcd {
        path /skydns
        endpoint <etcd_endpoint>
        upstream /etc/resolv.conf
    }
    ...
}
