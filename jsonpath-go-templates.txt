====
https://kubernetes.io/docs/tasks/access-application-cluster/list-all-running-container-images/


kubectl get pods --all-namespaces -o jsonpath="{..image}" |\
tr -s '[[:space:]]' '\n' |\
sort |\
uniq -c





kubectl get pods --all-namespaces -o jsonpath="{.items[*].spec.containers[*].image}"

kubectl get pods --all-namespaces -o=jsonpath='{range .items[*]}{"\n"}{.metadata.name}{":\t"}{range .spec.containers[*]}{.image}{", "}{end}{end}' |\
sort

kubectl get pods --all-namespaces -o=jsonpath="{..image}" -l app=web

kubectl get pods --namespace kube-system -o jsonpath="{..image}"

kubectl get pods --namespace kube-system -o jsonpath="{range .items.spec.containers[*]}{.image}{", "}{end}"

kubectl get pods --all-namespaces -o go-template --template="{{range .items}}{{range .spec.containers}}{{.image}} {{end}}{{end}}"


kubectl get nodes -o jsonpath="{.items[*].status.conditions[*].type}"

nodes that do not have labels:

kubectl get nodes -o go-template='{{range .items }}{{if .metadata.labels }}{{else}}{{printf "%s\n" .metadata.name}}{{ end }}{{end

pods that do not have lables:
kubectl get pods --all-namespaces -o go-template='{{range .items }}{{if .metadata.labels }}{{else}}{{printf "%s\n" .metadata.name}}{{ end }}{{end}}'

I could get the pods with labels using jsonpath by entering the following kubectl get pods --all-namespaces -o jsonpath='{.items[?(@.metadata.labels)].metadata.name}' But the following did not work kubectl get pods --all-namespaces -o jsonpath='{.items[?(!@.metadata.labels)].metadata.name}' 

Note:
Kubectl jsonpath parser does not support negation

kubectl get nodes --selector=kubernetes.io/hostname!=node_host_name

https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/

More reading: https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/





